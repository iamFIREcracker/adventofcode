(defpackage :aoc/2023/16 #.cl-user::*aoc-use*)
(in-package :aoc/2023/16)


(defun parse-grid (&optional (strings (aoc::read-problem-input 2023 16)))
  (bnd* ((rows (length strings))
         (cols (length (first strings)))
         (map (make-hash-table :test 'equal)))
    (doseq ((i s) (enumerate strings))
      (doseq ((j ch) (enumerate s))
        (setf (gethash (list i j) map) ch)))
    (list map rows cols)))

(defun move-straight (pos dir) (mapcar #'+ pos dir))
(defun rotate-cw (dir) (list (second dir) (- (first dir))))
(defun rotate-ccw (dir) (list (- (second dir)) (first dir)))

(defun radiate (start dir &optional (map (first (parse-grid))))
  (bnd* ((energized (make-hash-table :test 'equal))
         (seen (make-hash-table :test 'equal)))
    (labels ((dfs (pos dir &aux (ch (gethash pos map)))
               (if (not ch) (return-from dfs))
               (unless-already-seen (seen pos dir)
                 (setf (gethash pos energized) t)
                 (cond ((char= ch #\.) (dfs (move-straight dir pos) dir))
                       ((char= ch #\\) (bnd1 (dir (if (zerop (first dir))
                                                    (rotate-cw dir)
                                                    (rotate-ccw dir)))
                                         (dfs (move-straight pos dir) dir)))
                       ((char= ch #\/) (bnd1 (dir (if (zerop (first dir))
                                                    (rotate-ccw dir)
                                                    (rotate-cw dir)))
                                         (dfs (move-straight pos dir) dir)))
                       ((and (char= ch #\|) (zerop (second dir)))
                        (dfs (move-straight dir pos) dir))
                       ((char= ch #\|) (bnd1 (dir (rotate-cw dir))
                                         (dfs (move-straight pos dir) dir))
                                       (bnd1 (dir (rotate-ccw dir))
                                         (dfs (move-straight pos dir) dir)))
                       ((and (char= ch #\-) (zerop (first dir)))
                        (dfs (move-straight dir pos) dir))
                       ((char= ch #\-) (bnd1 (dir (rotate-cw dir))
                                         (dfs (move-straight pos dir) dir))
                                       (bnd1 (dir (rotate-ccw dir))
                                         (dfs (move-straight pos dir) dir)))
                       (t (error 'wtf))))))
      (dfs start dir)
      (hash-table-count energized))))


(define-solution (2023 16) (input parse-grid)
  (destructuring-bind (map rows cols) input
    (values (radiate (list 0 0) (list 0 1) map)
            (looping
              (dorange (j 0 cols)
                (maximize! (radiate (list 0 j) (list 1 0) map))
                (maximize! (radiate (list (1- rows) j) (list -1 0) map)))
              (dorange (i 0 rows)
                (maximize! (radiate (list i 0) (list 0 1) map))
                (maximize! (radiate (list i (1- cols)) (list 0 -1) map)))))))

(define-test (2023 16) (8249 8444))
